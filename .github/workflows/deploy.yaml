name: Build and Publish

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:6.0-alpine
        ports:
          - 6379:6379

      postgres:
        image: postgres:12-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_HOST_AUTH_METHOD: trust

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        env:
          PYPI_USERNAME: ${{ secrets.DG_TWINE_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.DG_TWINE_PASSWORD }}
        run: |
          python -m pip install --upgrade pip
          pip install wheel pipenv
          pipenv install --dev --system

      - name: Run PyTest
        run: pytest --cov=driftbase/ --disable-warnings

  publish:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.9
        with:
          versionSpec: '5.x'

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Determine version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.9
        with:
          useConfigFile: true

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel pipenv

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
          role-to-assume: ${{ secrets.ECR_ACCESS_ROLE }}
          role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
          role-duration-seconds: 1200
          role-session-name: GitActionDriftBase

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push image
        env:
          PYPI_USERNAME: ${{ secrets.DG_TWINE_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.DG_TWINE_PASSWORD }}
        run: |
          echo 'export PYPI_USERNAME=${PYPI_USERNAME}' >.env
          echo `export PYPI_PASSWORD=${PYPI_PASSWORD}` >>.env
          make build push REGISTRY=${{ steps.login-ecr.outputs.registry }} REF=${{ github.ref }} VERSION=${{ steps.gitversion.outputs.semVer }}
