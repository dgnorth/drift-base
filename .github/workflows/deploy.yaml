name: Build and Publish

on:
  push:
    branches:
      - 'master'
      - 'develop'
      - 'release/**'
      - 'hotfix/**'
      - 'support/**'
  pull_request:
  workflow_dispatch:

jobs:
  test:
    uses: ./.github/workflows/test.yaml
    secrets: inherit

  publish:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: '5.x'

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Determine version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.15
        with:
          useConfigFile: true

      - name: Log version
        run: |
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel pipenv

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.DG_AWS_GITHUB_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DG_AWS_GITHUB_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
          role-to-assume: ${{ secrets.ECR_ACCESS_ROLE }}
          role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
          role-duration-seconds: 1200
          role-session-name: GitActionDriftBase

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push image
        id: publish
        env:
          DOCKER_BUILDKIT: 1
          PYPI_USERNAME: ${{ secrets.DG_TWINE_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.DG_TWINE_PASSWORD }}
        run: |
          echo "PYPI_USERNAME=${PYPI_USERNAME}" >.env
          echo "PYPI_PASSWORD=${PYPI_PASSWORD}" >>.env
          make build push REGISTRY=${{ steps.login-ecr.outputs.registry }} REF=${{ github.ref }} VERSION=${{ steps.gitversion.outputs.semVer }}

      - name: Send build notification to Slack
        uses: directivegames/ga-slack-build-notify@v1-beta
        with:
          version: ${{ steps.gitversion.outputs.semVer }}
          result: ${{ steps.publish.conclusion }}
          webhook_url: ${{ secrets.DG_SLACK_BUILDS_WORKFLOW_URL }}
